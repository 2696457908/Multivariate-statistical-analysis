# 二维坐标+气泡图大小+气泡颜色
fig = ggplot(data = df,
mapping = aes(x = fixed.acidity, y = volatile.acidity,
size = citric.acid, color = as.numeric(df$type)))
fig + geom_point() +scale_color_gradient(low="lightblue",high ="darkblue")
# 2.8 四维数据
# 二维坐标+气泡图大小+气泡颜色
fig = ggplot(data = df,
mapping = aes(x = fixed.acidity, y = volatile.acidity,
size = citric.acid, color = as.numeric(type)))
fig + geom_point() +scale_color_gradient(low="lightblue",high ="darkblue")
as.numeric(df$type)
as.numeric(df$type)[0]
as.numeric(df$type)[1]
df$type[1]
# 分类三维 坐标----------
plot_ly(data = winedata, size = 1, color = ~type, x = ~fixed.acidity,
y = ~volatile.acidity, z = ~citric.acid,
type = "scatter3d", mode = "markers")
# 2.9 五维数据
# 三维坐标+气泡颜色+气泡大小
plot_ly(data = df, color = ~type,
x = ~fixed.acidity, y = ~volatile.acidity, z = ~citric.acid,
type = "scatter3d", marker = list(size = ~chlorides*50))
fig = ggplot(data = df,
mapping = aes(x = fixed.acidity, y = volatile.acidity,
size = citric.acid, color = residual.sugar, shape = type))
fig + geom_point() +
scale_color_gradient(low="lightblue",high ="darkblue") +
scale_shape_manual(values = c(21,22))
# 2.8 气泡图(三维)
df = winedata[sample(1000), ]
fig = ggplot(data = df,
mapping = aes(x = fixed.acidity, y = volatile.acidity,
size = citric.acid, color = residual.sugar, shape = type))
fig + geom_point() +
scale_color_gradient(low="lightblue",high ="darkblue") +
scale_shape_manual(values = c(21,22))
fig = ggplot(data = df,
mapping = aes(x = fixed.acidity, y = volatile.acidity,
size = citric.acid, color = chlorides, shape = type))
fig + geom_point() +
scale_color_gradient(low="lightblue",high ="darkblue") +
scale_shape_manual(values = c(21,22))
fig + geom_point() +
scale_shape_manual(values = c(21,22))
fig + geom_point() +
scale_color_gradient(low="lightblue",high ="darkblue") +
scale_shape_manual(values = c(21,22))
# 2.9 六维
# 三维坐标+气泡颜色+气泡大小+气泡形状
plot_ly(data = df, color = ~quality, x = ~fixed.acidity,
y = ~volatile.acidity, z = ~citric.acid,
symbol = ~type ,  symbols = c('x', 'o'),
type = "scatter3d", marker = list(size = ~chlorides*50))
# 平行坐标图 ------多维
# 横轴为各个特征，图中每条线代表一个样本点，不同颜色代表不同分类
ggparcoord(data = winedata, groupColumn = 13) + geom_line()
ggparcoord(data = df, groupColumn = 13) + geom_line()
# 平行坐标图 ------多维
# 横轴为各个特征，图中每条线代表一个样本点，不同颜色代表不同分类
ggparcoord(data = winedata, groupColumn = 13) + geom_line()
# 热力图 -----多维
# 可视化各变量之间的相关性
winedata_type_numeric = winedata
winedata_type_numeric$type = as.numeric(winedata$type)
# 优化一下
# 获得相关矩阵的上三角元素
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
cormat = round(cor(winedata_type_numeric),2)
upper_tri = get_upper_tri(cormat)
melted_cormat = melt(upper_tri, na.rm = TRUE)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
# 降维操作
# 无监督的PCA
df = winedata[, -13]
df_pca = princomp(x = df, cor = FALSE)
summary(df_pca, loadings = TRUE)
screeplot(df_pca, type="lines")
# 由碎石图可以看到 选择两个主成分比较好
new_df = data.frame(predict(df_pca)[, 1:2])
new_df$type = winedata$type
names(new_df)
# 作图观察结果
fig = ggplot(data = new_df,
mapping = aes(x = Comp.1, y = Comp.2, color = type))
fig + geom_point(size = 2)
# 无监督的t-SNE方法
set.seed(1)
df = winedata[, -13]
tsne_result = Rtsne(df, check_duplicates = FALSE)
new_df = data.frame(tsne_result$Y, winedata$type)
fig = ggplot(data = new_df,
mapping = aes(x = X1, y = X2, color = winedata$type))
fig + geom_point(size = 2)
winedata = read.csv('C:\\Users\\xiawenjun\\Desktop\\助教\\wine_data.csv', head=TRUE)
winedata = winedata[sample(length(winedata[, 1])), ]
View(winedata)
fig = ggplot(data = winedata,
mapping = aes(x = fixed.acidity, color = as.factor(quality)))
fig + geom_line(size = 1.2, stat = "density")
# 2.3 箱线图 ---------------二维
fig = ggplot(data = winedata,
mapping = aes(x = quality, y = fixed.acidity,
color = as.factor(quality)))
fig + geom_boxplot()
library(mvtnorm)
x = rmvnorm([10, 2])
x = rmvnorm()
x = rmvnorm(10)
x = rmvnorm(10)
x = rmvnorm(10, rep(0, 3), diag(3))
diag(3)
library(mvtnorm)
x = rmvnorm(10, rep(0, 3), diag(3))
x
dmvnorm(c(.5,.5), mean= c(2,15), matrix(c(3, 0, 0, 9), 2))
x = rmvnorm(10, rep(0, 2), diag(2))
dmvnorm(x, mean= c(2,15), matrix(c(3, 0, 0, 9), 2))
pmvnorm(x, mean= c(2,15), matrix(c(3, 0, 0, 9), 2))
pmvnorm(lower = c(0, 0), upper = c(1, 1), mean= c(2,15), matrix(c(3, 0, 0, 9), 2))
n <- 5
mean <- rep(0, 5)
lower <- rep(-1, 5)
upper <- rep(3, 5)
corr <- diag(5)
corr[lower.tri(corr)] <- 0.5
corr[upper.tri(corr)] <- 0.5
prob <- pmvnorm(lower, upper, mean, corr)
print(prob)
library(installr)
updateR(fast=TRUE,cran_mirror="https://mirrors.ustc.edu.cn/CRAN/")
updateR(fast=TRUE,cran_mirror="https://mirrors.ustc.edu.cn/CRAN/")
yes
update.packages(repos = "https://mirrors.ustc.edu.cn/CRAN/",ask='graphics',checkBuilt=TRUE)
# 常见的步骤/格式
ggplot2(data, aes(x = , y = , )) +   # 添加数据
geom_xxx() +                       # 添加图形
geom_xxx() +                       # 可能会添加多个图形
annotate() +                       # 添加标注
labs() +                           # 添加坐标轴、标题、副标题等
guides() +                         # 修改默认图例
theme() +                          # 全局修改主题，例如字体、背景色等
# 数据准备
library(ggplot2)
winedata = read.csv('C:\\Users\\xiawenjun\\Desktop\\助教\\wine_data.csv', head=TRUE)
winedata = winedata[sample(length(winedata[, 1])), ]
head(winedata)
summary(winedata)
# 一 散点图
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point()
library(ggplot2)
# 一 散点图
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point()
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
# 一 散点图
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point()
# 如何更改散点的颜色？
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(aes(color = 'darkblue'))
# 特别注意！！
# 这里如果把color写在了aes里面结果是错误的
# Reason：映射关系，aes映射函数中将color这个变量映射到’darkblue‘这个字符串，由于该字符串
#         不表示具体一个颜色，系统将自动为它分配一个颜色
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 1.5, color = 'darkblue')
# 考虑如何分组作散点图？
# 颜色、大小、形状、透明度等
# 仍然采用映射关系
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 3, aes(color = type))
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 3, aes(color = type, shape = type))
# 如何修改默认分配的颜色？
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 3, aes(color = type, shape = type)) +
scale_color_manual(values = c("#999999", "#E69F00")) +
scale_shape_manual(values = c(15, 19))
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 3, aes(color = type, shape = type)) +
scale_color_manual(values = c("#999999", "#E69F00")) +
scale_shape_manual(values = c(15, 19))
# 添加坐标轴和标题
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 3, aes(color = type, shape = type)) +
scale_color_manual(values = c("#E69F00", "#999999"), labels=c("red wine", "white wine")) +
scale_shape_manual(values = c(15, 19), labels=c("red wine", "white wine")) +
labs(x = 'concentration of fixed.acidity',
y = 'concentration of violatile.acidity',
title = 'scatter plot of fixed.acidity and violatile.acidity by type') +
theme(
# title居中
plot.title = element_text(hjust = 0.5, family="mono", face = 'bold'),
# 坐标轴标签字体变大
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
# 坐标轴刻度字体变大加粗
axis.text.x = element_text(size = 12, face = 'bold'),
axis.text.y = element_text(size = 12, face = 'bold'),
# 图例字体大小
legend.text=element_text(size=12),
# 图例标题
legend.title=element_blank(),
# 图例位置
legend.position = 'top',
panel.background = element_rect(colour = "black", size = 2),
)
# 添加标识
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 3, aes(color = type, shape = type)) +
scale_color_manual(values = c("#E69F00", "#999999"), labels=c("red wine", "white wine")) +
scale_shape_manual(values = c(15, 19), labels=c("red wine", "white wine")) +
labs(x = 'concentration of fixed.acidity',
y = 'concentration of violatile.acidity',
title = 'scatter plot of fixed.acidity and violatile.acidity by type') +
theme(
# title居中
plot.title = element_text(hjust = 0.5, family="mono", face = 'bold'),
# 坐标轴标签字体变大
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
# 坐标轴刻度字体变大加粗
axis.text.x = element_text(size = 12, face = 'bold'),
axis.text.y = element_text(size = 12, face = 'bold'),
# 图例字体大小
legend.text=element_text(size=12),
# 图例标题
legend.title=element_blank(),
# 图例位置
legend.position = 'top',
panel.background = element_rect(colour = "black", size = 2),
) +
annotate(geom = 'rect',             # 方形区域
xmin = 6, xmax =10,        #
ymin = 1.2, ymax = 1.6,    # 坐标范围
fill = 'red', alpha = 0.2) + # 填充为红色，透明度为0.2
# 添加箭头，不建议在annotate中添加箭头，方向不好控制
geom_segment(aes(x = 12, y = 1.4, xend = 10, yend = 1.3),
size = 1,
arrow = arrow(angle = 20, length = unit(4, "mm"))) +
# 添加文字
annotate(geom = 'text',
x = 13.5, y = 1.4, size = 5,
label = 'low fixed.acidity but \n high violatile.acidity')
# 二 直方图
ggplot(data = winedata,
aes(x = volatile.acidity)) +
geom_histogram(bins = 50, alpha = 0.6, fill = 'steelblue', colour = 'black')
ggplot(data = winedata,
aes(x = volatile.acidity)) +
geom_histogram(bins = 50, alpha = 0.6, fill = 'steelblue', colour = 'black') +
geom_density(color = 'red', size = 1.5)
ggplot(data = winedata,
aes(x = volatile.acidity)) +
geom_histogram(bins = 50, mapping = aes(y = ..density..), alpha = 0.6, fill = 'steelblue', colour = 'black')+
geom_line(stat = 'density', size = 1.1, color = 'red')
remotes::install_github("GuangchuangYu/nCov2019")
remotes::install_github("GuangchuangYu/nCov2019")
remotes::install_github("GuangchuangYu/nCov2019")
remotes::install_github("GuangchuangYu/nCov2019")
remotes::install_github("GuangchuangYu/nCov2019")
remotes::install_github("GuangchuangYu/nCov2019")
install.packages("downloader")
library(nCov2019)
x =  = load_nCov2019()
x = load_nCov2019()
x = x['global']
x
library(Rtools)
install.packages("devtools")
devtools::install_github("heike/extracat")
pkgbuild::check_build_tools(debug = TRUE)
install.packages("Rtools")
install.packages("rtools40")
library(rtools40)
install.packages("Rtools")
install.packages("rtools40")
library(nCov2019)
library(maptools)
library(dplyr)
library(ggplot2)
# --------------------------------
library(lubridate)
x = load_nCov2019()
data_province = summary(x)
write.csv(data_province, 'C:\\User\xiawenjun\\Desktop\\')
write.csv(data_province, 'C:\\User\xiawenjun\\Desktop\\data_province.csv')
write.csv(data_province, 'C:\\Users\xiawenjun\\Desktop\\data_province.csv')
write.csv(data_province, 'C:\\Users\\xiawenjun\\Desktop\\data_province.csv')
library(ggplot2)
winedata = read.csv('C:\\Users\\xiawenjun\\Desktop\\助教\\Multivariate-statistical-analysis\\ggplot2\\wine_data.csv', head=TRUE)
# 添加标识
ggplot(data = winedata, aes(x = fixed.acidity,
y = volatile.acidity)) +
geom_point(size = 3, aes(color = type, shape = type)) +
scale_color_manual(values = c("#E69F00", "#999999"), labels=c("red wine", "white wine")) +
scale_shape_manual(values = c(15, 19), labels=c("red wine", "white wine")) +
labs(x = 'concentration of fixed.acidity',
y = 'concentration of violatile.acidity',
title = 'scatter plot of fixed.acidity and violatile.acidity by type') +
theme(
# title居中
plot.title = element_text(hjust = 0.5, family="mono", face = 'bold'),
# 坐标轴标签字体变大
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15),
# 坐标轴刻度字体变大加粗
axis.text.x = element_text(size = 12, face = 'bold'),
axis.text.y = element_text(size = 12, face = 'bold'),
# 图例字体大小
legend.text=element_text(size=12),
# 图例标题
legend.title=element_blank(),
# 图例位置
legend.position = 'top',
panel.background = element_rect(colour = "black", size = 2),
) +
annotate(geom = 'rect',             # 方形区域
xmin = 6, xmax =10,        #
ymin = 1.2, ymax = 1.6,    # 坐标范围
fill = 'red', alpha = 0.2) + # 填充为红色，透明度为0.2
# 添加箭头，不建议在annotate中添加箭头，方向不好控制
geom_segment(aes(x = 12, y = 1.4, xend = 10, yend = 1.3),
size = 1,
arrow = arrow(angle = 20, length = unit(4, "mm"))) +
# 添加文字
annotate(geom = 'text',
x = 13.5, y = 1.4, size = 5,
label = 'low fixed.acidity but \n high violatile.acidity')
set.seed(0)
# x1 = rnorm(100, 0, 1)
x1 = c(0.05,-0.15,0.03,0.48,-1.1,0.33,-1.27,-0.5,-0.07,-1.66,-0.01,0.92,0.38,-0.73,0.13,-0.42,1.47,
0.08,1.02,-0.58,1.31,-1.14,-0.88,-0.49,0.23,0.35,0.69,-0.3,2.09,-2.21,-1.24,0.76,0.15,0.24,0.47,
-0.62,0.02,-1.44,0.41,-1.3,-1.48,1.03,-2.22,-1.64,0.36,0.81,-0.57,0.58,-0.97,1.84,1.2,1.07,0.64,
1.29,0.62,0.67,-2.62,-0.6,1.01,-0.14,0.52,-0.08,-0.7,-2.23,-0.18,0.5,-0.59,0.56,0.78,0.4,-2.28,
-0.21,0.26,0.11,0.61,-0.76,-0.03,2.57,-0.66,2.28,0.2,-1.42,1.86,2.2,-0.12,-0.95,-1.13,-0.67,-0.68,
-3.67,-1.03,-0.69,-1.12,0.97,-1.97,0.87,-2.02,-0.79,0.75,1.41)
# rf(100, 5, 10)
x2 = c(3.08,5.08,1.16,1.34,2.16,0.53,0.63,1.59,0.62,1.1,1.52,0.82,1.4,0.26,0.58,2.51,0.71,3.02,0.48,
0.68,1.39,1.04,1.51,0.59,0.7,0.67,0.83,0.98,0.35,2.48,1.14,1.71,1.75,0.96,0.73,1.83,0.65,0.38,0.58,
0.2,0.32,0.49,1.08,2.55,1.77,1.4,1.1,1.54,0.54,0.94,0.27,0.22,1.66,1.14,0.41,0.21,0.31,1.75,1.39,
1.39,1.5,1.79,2.39,0.19,2.84,0.18,0.2,2.17,1.69,0.64,0.75,1.08,0.2,3.84,2.73,0.59,1.11,1.39,1.12,
2.14,3.37,0.33,1.39,2.9,0.8,2.94,0.32,0.74,0.39,1.72,0.66,0.84,0.43,2.61,2.16,0.73,0.84,0.67,1.98,1.72)
df1 = data.frame(x1)
df2 = data.frame(x2)
names(df1) = 'x'
names(df2) = 'x'
library(ggplot2)
ggplot(data = df1, aes(x = x)) +
geom_histogram(bins = 15, mapping = aes(y = ..density..),
alpha = 0.6, fill = 'steelblue', colour = 'black')+
geom_line(stat = 'density', size = 1.1, color = 'red')
# QQ图 Quantile-Quantile
# 分位数  F^-1(\alpha)
qqnorm(x)
qqline(x)
ggplot(data = df1, aes(sample = x)) +
geom_qq() +
geom_qq_line(size = 1, color = 'red')
# QQ图 Quantile-Quantile
# 分位数  F^-1(\alpha)
qqnorm(x1)
qqline(x1)
ggplot(data = df1, aes(sample = x)) +
geom_qq() +
geom_qq_line(size = 1, color = 'red')
# 同时qq图还可以检验两组数据是否来自同一个分布
qqplot(x1, x2)
qqline(x2)
# H0 follow normality distribution
shapiro.test(x1)
shapiro.test(x2)
ks.test(x1, 'pnorm', 0, 1)
Fn = (rank(x1))/length(x1)  # 经验分布函数
F0 = pnorm((x1-0)/1)        # 标准分布函数
max(abs(Fn-F0))             # 定义距离
# 同样也可以检验两个总体是否是同一个分布
ks.test(x1, x2)
# 2.3 lilliefors 正态性检验
# 不指定总体，用样本均值和方差代替总体均值和方差
# 更加常用
lillie.test(x1)
lillie.test(x2)
library(nortest)
# 2.3 lilliefors 正态性检验
# 不指定总体，用样本均值和方差代替总体均值和方差
# 更加常用
lillie.test(x1)
lillie.test(x2)
# 2.4 Anderson–Darling 检验
# Anderson T W, Darling D A. A test of goodness of fit[J]. Journal of the American statistical association, 1954, 49(268): 765-769.
ad.test(x1)
ad.test(x2)
# ---------------------------------------------
# 对称性检验
# 依据分位数的对称关系
# https://mp.weixin.qq.com/s/Gl0OrOcICeZKCyU9I0r9jg
loca=ppoints(100)
q1<-quantile(x2,loca[1:50])     #K=50;可人为调节
q2<-quantile(x2,loca[100:51])
plot(q1,-q2)
abline(lm(-q2~q1),lwd=2, col="blue")         #画x的样本分位点的拟合直线
pi
print(head(winedata))
library(iris)
iris
m = lm(Sepal_Length~Sepal_Width, data = iris)
iris
data("iris")
iris
m = lm(Sepal_Length~Sepal_Width, data = iris)
iris$Sepal_Length
iris$Sepal.Length
install.packages("reticulate")
library(reticulate)
py_available()
use_condaenv("D:/Anaconda")
py_config()#安装的python版本环境查看，显示anaconda和numpy的详细信息
py_available()
py_module_available("pandas")   #检查“pandas”是否安装
os <- import("os")
os$getcwd()
os$listdir()#您可以使用os包中的listdir（）函数来查看工作目录中的所有文件
numpy <- import("numpy")
y <- array(1:4, c(2, 2))
y
x <- numpy$array(y)
x
numpy$transpose(x)#将数组进行转置
numpy$linalg$eig(x)#求特征根和特征向量
numpy <- import("numpy") as np
repl_python()
1+1
quit
# 加载“panda”数据集
import pandas as pd
repl_python()
aaa  = 1
quit
# 回到R
exit
aaa
# 交互使用R和Python
repl_python()
1+1
exit
# 调用python脚本
setwd('C:/Users/xiawenjun/Desktop/助教/Multivariate-statistical-analysis/交互')
setwd('C:/Users/xiawenjun/Desktop/助教/Multivariate-statistical-analysis/交互')
py_available()                  # 检查您的系统是否安装过Python
use_condaenv("D:/Anaconda")
py_config()                     #安装的python版本环境查看，显示anaconda和numpy的详细信息
py_available()
py_module_available("pandas")   #检查“pandas”是否安装
os <- import("os")
os$getcwd()
os$listdir()#您可以使用os包中的listdir（）函数来查看工作目录中的所有文件
numpy <- import("numpy")
y <- array(1:4, c(2, 2))
y
x <- numpy$array(y)
x
numpy$transpose(x)#将数组进行转置
numpy$linalg$eig(x)#求特征根和特征向量
# 交互使用R和Python
repl_python()
exit
# 调用python脚本
source_python('test.py')
os$getcwd()
source_python(test.py)
# 调用python脚本
source_python('test.py')
# 调用python脚本
source_python('test.py')
source_python('test2.py')
add(1, 2)
dd = add(1, 2)
dd
# 调用python脚本中的函数
source_python('test2.py')
dd = add(1, 2)
pythonadd(1, 2)
install.packages("Ryacas")
